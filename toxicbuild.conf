import os

# Config files to be used on tests
# I need different config files because I have parallel tests running
# and accessing database and tcp ports.
BASE_DIR = os.path.abspath(os.path.dirname(__file__))
DATA_DIR = os.path.join(BASE_DIR, os.path.join(
    'tests', os.path.join('functional', 'data')))
MASTER_DATA_DIR = os.path.join(DATA_DIR, 'master')
SLAVE_DATA_DIR = os.path.join(DATA_DIR, 'slave')

PY34_TOXICMASTER_CONF = os.path.join(MASTER_DATA_DIR,
                                     'toxicmaster-python34.conf')

PY34_TOXICSLAVE_CONF = os.path.join(SLAVE_DATA_DIR,
                                    'toxicslave-python34.conf')

PY35_TOXICMASTER_CONF = os.path.join(MASTER_DATA_DIR,
                                     'toxicmaster-python35.conf')

PY35_TOXICSLAVE_CONF = os.path.join(SLAVE_DATA_DIR,
                                    'toxicslave-python35.conf')

# Here the commands that will be the steps in the build.
# This runs unit tests and check tests coverage.
UNITTEST_COVERAGE = './build-scripts/check_coverage.sh toxicbuild 100'
# This runs functional tests.
FUNCTIONAL = 'python setup.py test --test-suite=tests.functional'
# This checks pep8 and pyflakes.
FLAKE8 = './build-scripts/check_style.sh'

# This python-venv pluging creates a new virtual env and install deps
# using pip.
# Virtual env for python3.4
PY34_VENV = {'name': 'python-venv',
             'pyversion': 'python3.4',
             'remove_env': True}
# Virtual env for python3.5
PY35_VENV = {'name': 'python-venv',
             'pyversion': 'python3.5',
             'remove_env': True}

# Builder to run on python3.4
PY34_BUILDER = {
    'name': 'python3.4',
    'branch': 'master',
    'envvars': {'TOXICMASTER_SETTINGS': PY34_TOXICMASTER_CONF,
                'TOXICSLAVE_SETTINGS': PY34_TOXICSLAVE_CONF},
    'plugins': [PY34_VENV],

    'steps': [{'name': 'Unit tests & coverage',
               'command': UNITTEST_COVERAGE},

              {'name': 'Functional tests',
               'command': FUNCTIONAL},

              {'name': 'Checking pyflakes e pep8',
               'command': FLAKE8,
               'warning_on_fail': True}]
}

# Builder to run on python3.5
PY35_BUILDER = {
    'name': 'python3.5',
    'branch': 'master',
    'envvars': {'TOXICMASTER_SETTINGS': PY35_TOXICMASTER_CONF,
                'TOXICSLAVE_SETTINGS': PY35_TOXICSLAVE_CONF},

    'plugins': [PY35_VENV],

    'steps': [{'name': 'Unit tests & coverage',
               'command': UNITTEST_COVERAGE},

              {'name': 'Functional tests',
               'command': FUNCTIONAL},

              {'name': 'Checking pyflakes e pep8',
               'command': FLAKE8,
               'warning_on_fail': True}]
}


BUILDERS = [PY34_BUILDER, PY35_BUILDER]
