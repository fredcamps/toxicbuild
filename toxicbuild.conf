import os
import sys

# Config files to be used on tests
# I need different config files because I have parallel tests running
# and accessing database and tcp ports.
BASE_DIR = os.path.abspath(os.path.dirname(__file__))
DATA_DIR = os.path.join(BASE_DIR, os.path.join(
    'tests', os.path.join('functional', 'data')))
MASTER_DATA_DIR = os.path.join(DATA_DIR, 'master')
SLAVE_DATA_DIR = os.path.join(DATA_DIR, 'slave')
UI_DATA_DIR = os.path.join(DATA_DIR, 'ui')

PYVERSION = ''.join([str(v) for v in sys.version_info[:2]])

TOXICMASTER_PY35_CONF = os.path.join(MASTER_DATA_DIR,
                                     'toxicmaster-python35.conf')

TOXICMASTER_PY34_CONF = os.path.join(MASTER_DATA_DIR,
                                     'toxicmaster-python34.conf')

TOXICSLAVE_PY35_CONF = os.path.join(SLAVE_DATA_DIR,
                                    'toxicslave-python35.conf')

TOXICSLAVE_PY34_CONF = os.path.join(SLAVE_DATA_DIR,
                                    'toxicslave-python34.conf')

TOXICUI_PY35_CONF = os.path.join(UI_DATA_DIR,
                                 'toxicui-python35.conf')

TOXICUI_PY34_CONF = os.path.join(UI_DATA_DIR,
                                 'toxicui-python34.conf')


# Here the commands that will be the steps in the build.
# This runs unit tests and check tests coverage.
UNITTEST_COVERAGE = './build-scripts/check_coverage.sh toxicbuild 100'
# This runs functional tests.
FUNCTIONAL = 'python setup.py test --test-suite=tests.functional'
# This checks pep8 and pyflakes.
FLAKE8 = './build-scripts/check_style.sh'
# Update html docs on the remote server. Uses the docs in the branch release
UPLOAD_DOCS = 'pdj-deployer pdj01 software_deploy toxicbuild_docs release'

# This python-venv pluging creates a new virtual env and install deps
# using pip.
# Virtual env for python3.4
PY34_VENV = {'name': 'python-venv',
             'pyversion': 'python3.4',
             'requirements_file': 'requirements.txt'}
# 'remove_env': True}

# Virtual env for python3.5
PY35_VENV = {'name': 'python-venv',
             'pyversion': 'python3.5',
             'requirements_file': 'requirements.txt'}
# 'remove_env': True}

TEST_STEPS = [{'name': 'Unit tests & coverage',
               'command': UNITTEST_COVERAGE,
               'timeout': 300},

              {'name': 'Functional tests for',
               'command': FUNCTIONAL,
               'timeout': 300},

              {'name': 'Checking pyflakes e pep8',
               'command': FLAKE8,
               'warning_on_fail': True}]

RELEASE_STEPS = [
    {'name': 'Unit tests & coverage',
     'command': UNITTEST_COVERAGE,
     'timeout': 300,
     'stop_on_fail': True},

    {'name': 'Functional tests',
     'command': FUNCTIONAL,
     'stop_on_fail': True,
     'timeout': 300},

    {'name': 'Checking pyflakes e pep8',
     'command': FLAKE8,
     'warning_on_fail': True},

    {'name': 'Upload documentation',
     'command': UPLOAD_DOCS,
     'warning_on_fail': True},

    {'name': 'Upload to PyPI',
     'command': './build-scripts/upload2pypi.sh',
     'timeout': 300},
]

BASE_MASTER_BUILDER = {
    'branch': 'master',
    'steps': TEST_STEPS
}

# Builder to run on python3.4
PY34_BUILDER = BASE_MASTER_BUILDER.copy()
PY34_BUILDER.update({'name': 'python3.4',
                     'plugins': [PY34_VENV],
                     'envvars': {'TOXICMASTER_SETTINGS': TOXICMASTER_PY34_CONF,
                                 'TOXICSLAVE_SETTINGS': TOXICSLAVE_PY34_CONF,
                                 'TOXICUI_SETTINGS': TOXICUI_PY34_CONF},
                     })

PY35_BUILDER = BASE_MASTER_BUILDER.copy()
PY35_BUILDER.update({'name': 'python3.5',
                     'plugins': [PY35_VENV],
                     'envvars': {'TOXICMASTER_SETTINGS': TOXICMASTER_PY35_CONF,
                                 'TOXICSLAVE_SETTINGS': TOXICSLAVE_PY35_CONF,
                                 'TOXICUI_SETTINGS': TOXICUI_PY35_CONF},
                     })


RELEASE_BUILDER = {
    'name': 'release',
    'branch': 'release',
    'envvars': {'TOXICMASTER_SETTINGS': TOXICMASTER_PY35_CONF,
                'TOXICSLAVE_SETTINGS': TOXICSLAVE_PY35_CONF,
                'TOXICUI_SETTINGS': TOXICUI_PY35_CONF},

    'plugins': [PY35_VENV],
    'steps': RELEASE_STEPS,
}


BUILDERS = [PY34_BUILDER, PY35_BUILDER, RELEASE_BUILDER]
